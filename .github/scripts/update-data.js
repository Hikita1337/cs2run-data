const fs = require("fs");
const path = require("path");

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –∏—Å—Ç–æ—Ä–∏–µ–π
const historyPath = path.join(process.cwd(), "cs2run_history.json");

try {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
  let history = [];
  if (fs.existsSync(historyPath)) {
    const content = fs.readFileSync(historyPath, "utf8").trim();
    if (content) {
      try {
        const parsed = JSON.parse(content);
        if (Array.isArray(parsed)) {
          history = parsed;
        } else {
          console.warn("‚ö†Ô∏è –§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞—Å—Å–∏–≤, —Å–±—Ä–∞—Å—ã–≤–∞—é");
        }
      } catch (e) {
        console.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON, —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤");
      }
    }
  }

  console.log(`üìä –°–µ–π—á–∞—Å –≤ –∏—Å—Ç–æ—Ä–∏–∏ ${history.length} –∑–∞–ø–∏—Å–µ–π`);

  // --- –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å —Ç–≤–æ–π –ø–∞—Ä—Å–µ—Ä ---
  // –ü—Ä–∏–º–µ—Ä –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const newData = {
    time: new Date().toISOString(),
    avg: Math.random() * 2 + 1,
    games: Math.floor(Math.random() * 10 + 1)
  };

  // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –Ω–∞—á–∞–ª–æ
  history.unshift(newData);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º
  fs.writeFileSync(historyPath, JSON.stringify(history, null, 2));

  console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${newData.avg.toFixed(2)} (${newData.games} –∏–≥—Ä)`);
  console.log(`üïí –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date().toLocaleString("ru-RU")}`);

} catch (err) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", err);
  process.exit(1);
}
