const fs = require('fs');
const path = require('path');

(async () => {
  try {
    const historyPath = path.join(process.cwd(), 'cs2run_history.json');

    // –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π JSON
    let history = [];
    if (fs.existsSync(historyPath)) {
      const data = fs.readFileSync(historyPath, 'utf8');
      history = JSON.parse(data);
    }

    // –õ–æ–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    console.log(`üìä –°–µ–π—á–∞—Å –≤ –∏—Å—Ç–æ—Ä–∏–∏ ${history.length} –∑–∞–ø–∏—Å–µ–π`);

    // –î–æ–±–∞–≤–ª—è–µ–º "–º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
    const updatedAt = new Date().toLocaleString('ru-RU', {
      timeZone: 'Europe/Moscow'
    });

    const result = {
      updatedAt, // –Ω–∞–ø—Ä–∏–º–µ—Ä "29.10.2025, 02:14:33"
      totalGames: history.length,
      averageCrash: (
        history.reduce((sum, item) => sum + item.crash, 0) / history.length
      ).toFixed(2),
      data: history
    };

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å—ë –≤ —Ñ–∞–π–ª (—Ç–µ–ø–µ—Ä—å —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏)
    fs.writeFileSync(historyPath, JSON.stringify(result, null, 2));
    console.log(`‚úÖ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã (${updatedAt})`);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  }
})();
